require(gptk)
options <- gpOptions()
options$kern$comp <- list(kernel,"white")
options
rnorm(10)
rnorm(100)
X = matrix(rnorm(100), nrow=10)
X
y = 1:10
gpCreate(1,1,X,as.matrix(y), options=options)
gpCreate(1,1,X[1,],as.matrix(y), options=options)
gpCreate(1,1,X[,1],as.matrix(y), options=options)
X[,1]
gpCreate(1,1,X[,1],as.matrix(y), options=options)
X.m = as.matrix(X[,1])
X.m
gpCreate(1,1,X.m,as.matrix(y), options=options)
y
options$kern$comp <- list(kernel,"white")
X.vec = 1:12
  
  X = matrix(X.vec, ncol=1)
  y.vec = 3*sin(X[,1]) + cos(X[,1]) + rnorm(nrow(X),0,1) ## outcome, added some noise
  y = matrix(y.vec, ncol=1)

  X[,1] = X[,1] * tscaling
  
tscaling = 1.2
X.vec = 1:12
  
  X = matrix(X.vec, ncol=1)
  y.vec = 3*sin(X[,1]) + cos(X[,1]) + rnorm(nrow(X),0,1) ## outcome, added some noise
  y = matrix(y.vec, ncol=1)

  X[,1] = X[,1] * tscaling
  
X
y
kernel = "rbf"
  options <- gpOptions()
  options$kern$comp <- list(kernel,"white")
  
  model <- gpCreate(1,1,X,as.matrix(y),options=options)
  
model
model$kern$comp
model$kern$comp[[1]]
model$kern$comp[[1]].inverseWidth
model$kern$comp[[1]]$inverseWidth
model$kern$comp[[1]]$variance
 options = optimiDefaultOptions()
options
names(model)
model$optimizer
model$optimiser
q()
n
