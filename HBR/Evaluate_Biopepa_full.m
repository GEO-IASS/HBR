%
% This script loads the result file generated by 'Example_Biopepa_full.m'
% and extracts the edge probabilities and calculates the AUROC and AUPREC
% scores given the gold standard networks defined in the folder
% 'Data_Biopepa/Goldstandards'
%
% --> 1st run Example_Biopepa_full.m
%     2nd run this script. 
%


clear all;

% for AUROC_AUPREC_scores.m
addpath('Code_HBR');

method_name = 'HBR';

% gradient can be: 
%      'coarseGradient', or 'RBFGradient'
gradient = 'coarseGradient';

% can be 'mRNA' or 'protein'
predictor_type = 'mRNA';


results_dir = 'Results';
goldstd_dir = 'Data_Biopepa/Goldstandards';
    


% Loads the results of the HBR MCMC simulations. 
% This file contains the results for different networks (see below) and
% several data instances for each network.
load(sprintf('%s/OUT_HBR_%s_%s.mat', results_dir, predictor_type, gradient));

% Define data related parameters
networks = {'wildtype', 'mutant_PRR7_PRR9', 'mutant_PRR7_PRR9_TOC1', ...
               'mutant_PRR5_PRR7_PRR9', 'mutant_TOC1', 'mutant_PRR5_PRR7_PRR9_TOC1'};


AUROCS = [];
AUPRECS = [];


for network_idx = 1:length(networks)

    network = networks{network_idx};

    %
    % Evaluate the results
    %
    %  1. Read in the gold standard matrix and convert to a vector
    %  2. Read in the result from the HBR simulations
    %  2. Convert the DAG samples to edge probabilities
    %  3. Execute the AUROC_AUPREC_scores.m script that calculates these
    %  scores based on the 1. and 3. 
    %
    
    %
    % 1. Read gold standard for this network and convert to vector
    %
    
    goldfile = sprintf('%s/true_network_%s_%s.txt', goldstd_dir, network, predictor_type);
    fprintf('read %s\n', goldfile);
    realnet = importdata(goldfile);  % reads in response-by-predictor matrix
      
    % transpose this matrix so it is in the same format as 'Edge_matrix', i.e. predictor-by-response 
    realnet = realnet'; 
    realnet_vec = realnet(:);
    realnet_vec = realnet_vec(realnet_vec ~= -1);

    
    for data_idx=1:5

        %
        % 2. Read in the results for the current network and data instance
        %
        Run = RESULTS{network_idx}{data_idx};

        %
        % 3. Convert to edge probility matrix
        %
        Edge_matrix = DAGs_to_edge_probabilities(Run.dag);
            
        % convert matrix to vector
        Edge_vec = Edge_matrix(:);
            
        % remove edges marked with NaN    
        Edge_vec = Edge_vec(~isnan(Edge_vec));
                       
            
        % 
        % Calculate AUROC/AUPREC
        %

        [auroc, auprec] = AUROC_AUPREC_scores(realnet_vec, Edge_vec);

        AUROCS = [AUROCS, auroc];
        AUPRECS = [AUPRECS, auprec];

        fprintf(' *   network: %s, data-id: %i, AUROC: %g, AUPREC: %g\n', network, data_idx, auroc, auprec);

    end

end
